## Load libraries
library(tidyverse)
library(data.table)
library(ggridges)
library(plotly)
library(ggpubr)
library(ggbeeswarm)
## Define which samples are controls
controls <- c("20-AKK-005","20-AKK-006","20-AKK-017","20-AKK-018",
"S11-222-Blanco2","T05-22470-Blanco5","T06-15978-Blanco4","T10-4338-Blanco4")
all_res <- data.frame()
csv_dir <- "./rs_fish_out_individual_thresholds/"
for(this_file in list.files(csv_dir)){
print(this_file)
channel <- str_split(this_file,pattern="\\.")[[1]][2]
this_csv <- fread(paste(csv_dir,this_file,sep="/"))
this_csv$channel <- channel
this_csv$filename <- this_file
all_res <- rbind(all_res,this_csv)
}
all_res <- all_res %>%
separate(filename,into=c("image","ch","ending"), sep = "\\.", remove = FALSE) %>%
separate("image",into= c("n1","n2","n3","n4"), sep = "-",remove = FALSE) %>%
mutate("sample" = if_else(is.na(n4),
paste(n1,n2,sep="-"),
paste(n1,n2,n3,sep="-"))) %>%
mutate("group" = if_else(sample %in% controls,"control","MI"),
"image_nr" = if_else(is.na(n4),n3,n4)) %>%
select(-c(ch,ending,n1,n2,n3,n4))
## Create a table of filenames
files <- all_res %>%
select(sample,image_nr,group) %>%
unique()
## Read in nuclei counts
nuc_counts <- fread("./mesmer/mesmer_nuclei_counts.csv")
nuc_counts <- nuc_counts %>%
separate(V1, into = c("b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","filename"), sep= "/") %>%
separate(filename,into = c("image","file_ending","tif"),sep = "\\.") %>%
mutate("n_nuclei" = V2) %>%
select(image,n_nuclei)
## Plot intensity distribution of spots per channel
ridge_plot <- ggplot(all_res,aes(x = intensity,paste(channel))) +
geom_density_ridges(aes(fill=paste("channel_",channel,sep=""))) +
scale_fill_manual(values = c("green","red","grey")) +
theme_minimal() +
labs(x = "Intensity",
y = "Channels") +
theme(legend.position = "none")
detection_controls <- subset(all_res,group == "control")
detection_plot <- ggplot(detection_controls,
aes(x,2048 - y,color = paste("channel_",channel,sep=""))) +
geom_point(size = 0.7) +
facet_wrap(~sample) +
scale_x_continuous(limits = c(0,2048)) +
scale_y_continuous(limits = c(0,2048)) +
scale_color_manual(values = c("green","red","grey")) +
theme_bw()
## Filter out spots that fall outside the 95% confidence interval of intensity for that channel
all_res_filt <- all_res %>%
group_by(channel) %>%
filter(intensity > quantile(all_res$intensity, 0.25)) %>%
ungroup()
## Filter out low intensity spots for certain images
intensity_dist <- ggplot(all_res_filt,aes(sample,intensity)) +
geom_boxplot() +
coord_flip() +
theme_cowplot() +
facet_wrap(~ channel)
detection_plot
intensity_dist <- ggplot(all_res_filt,aes(sample,intensity)) +
geom_boxplot() +
coord_flip() +
theme_cowplot() +
facet_wrap(~ channel)
intensity_dist
intensity_dist <- ggplot(all_res_filt,aes(sample,intensity)) +
geom_boxplot() +
coord_flip()
intensity_dist
spot_per_sample_plot
nuc_counts
head(nuc_counts)
head(nuc_counts)
head(spots_per_sample)
head(all_res_filt)
knitr::opts_chunk$set(echo = TRUE)
## Load libraries
library(tidyverse)
library(data.table)
library(ggridges)
library(plotly)
library(ggpubr)
library(ggbeeswarm)
library(cowplot)
head(spots_per_sample)
## Calculate some stats and plot detections
spots_per_sample <- all_res_filt %>%
group_by(sample,image_nr,group,channel) %>%
tally() %>%
arrange(desc(n)) %>%
mutate("image" = paste(sample,image_nr,sep="-"))
spots_per_sample$channel <- gsub("ch_1","channel1_TNNT2",spots_per_sample$channel)
spots_per_sample$channel <- gsub("ch_2","channel2_ANKDR1",spots_per_sample$channel)
spots_per_sample$channel <- gsub("ch_3","channel3_NPPB",spots_per_sample$channel)
head(spots_per_sample)
head(spots_per_sample)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(factoextra)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(factoextra)
## Specify groups for all sample names
control_samples <- c("20-AKK-005","20-AKK-006","20-AKK-017","20-AKK-018","S11-222-Blanco5","T05-22470-Blanco5","T06-15978-Blanco5","T10-4338-Blanco5")
control_samples_df <- data.frame("samples" = control_samples,
"sample_group" = "control")
fz_samples <- c("E18-1282","E20-3847","T17-20369","T18-18717","T20-1920","T20-18640")
fz_samples_df <- data.frame("samples" = fz_samples,
"sample_group" = "FZ")
iz_samples <- c("E18-2048","E18-2304","E18-3067","E18-3069","E20-1462","T18-15271",
"T19-06662","T19-10630","T19-10766","T19-13905","T20-07807","T20-26528")
iz_samples_df <- data.frame("samples" = iz_samples,
"sample_group" = "IZ")
sample_groups_df <- rbind(control_samples_df,fz_samples_df,iz_samples_df)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(factoextra)
## Read in all files with information about nuclear positions and parameters
nuclei_positions <- data.frame()
csv_dir <- "./nuclei_tables/"
for(this_file in list.files(csv_dir)){
print(this_file)
this_csv <- fread(paste(csv_dir,this_file,sep="/"))
this_csv$filename <- this_file
sample <- gsub("nuclei_params.csv","",this_file)
this_csv$image <- sample
this_csv$sample <- substr(sample,1,nchar(sample)-2)
nuclei_positions <- rbind(nuclei_positions,this_csv)
}
## Read in all files with spot information
spot_counts <- data.frame()
csv_dir <- "./rs_fish_out//"
for(this_file in list.files(csv_dir)){
print(this_file)
this_csv <- fread(paste(csv_dir,this_file,sep="/"))
this_csv$filename <- this_file
image <- str_split(this_file,pattern="\\.")[[1]][1]
this_csv$image <- image
this_csv$sample <- substr(image,1,nchar(image)-2)
channel <- str_split(this_file,pattern="\\.")[[1]][2]
this_csv$channel <- channel
spot_counts <- rbind(spot_counts,this_csv)
}
## Filter out spots that fall outside the 95% confidence interval of intensity for that channel
spot_counts_filt <- spot_counts %>%
group_by(channel) %>%
filter(intensity > quantile(spot_counts$intensity, 0.25)) %>%
subset(intensity > 600) %>%
ungroup() ## use a fixed threshold for intensity
head(spot_counts)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(tidyverse)
library(factoextra)
library(cowplot)
library(umap)
library(GGally)
library(ggridges)
library(ggbeeswarm)
## Read in all files with information about nuclear positions and parameters
nuclei_positions <- data.frame()
csv_dir <- "./nuclei_tables/"
for(this_file in list.files(csv_dir)){
print(this_file)
this_csv <- fread(paste(csv_dir,this_file,sep="/"))
this_csv$filename <- this_file
sample <- gsub("nuclei_params.csv","",this_file)
this_csv$image <- sample
this_csv$sample <- substr(sample,1,nchar(sample)-2)
nuclei_positions <- rbind(nuclei_positions,this_csv)
}
## Read in all files with spot information
spot_counts <- data.frame()
csv_dir <- "./rs_fish_out//"
for(this_file in list.files(csv_dir)){
print(this_file)
this_csv <- fread(paste(csv_dir,this_file,sep="/"))
this_csv$filename <- this_file
image <- str_split(this_file,pattern="\\.")[[1]][1]
this_csv$image <- image
this_csv$sample <- substr(image,1,nchar(image)-2)
channel <- str_split(this_file,pattern="\\.")[[1]][2]
this_csv$channel <- channel
spot_counts <- rbind(spot_counts,this_csv)
}
head(spot_counts)
head(nuclei_positions)
## Filter out spots that fall outside the 95% confidence interval of intensity for that channel
spot_counts_filt <- spot_counts %>%
group_by(channel) %>%
filter(intensity > quantile(spot_counts$intensity, 0.25)) %>%
subset(intensity > 600) %>%
ungroup() ## use a fixed threshold for intensity
## Filter out low intensity spots for certain images
intensity_dist <- ggplot(spot_counts_filt,aes(image,intensity, fill = sample)) +
geom_boxplot() +
geom_hline(yintercept = 600) +
coord_flip() +
theme_cowplot() +
facet_wrap(~ channel)
intensity_dist
4^2 + 3^2 =
4^2 + 3^2
sqrt(25)
sqrt(4^2 + 3^2 )
sqrt(4^2 + 3^2)
